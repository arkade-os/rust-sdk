/*
 * Ark API
 *
 * Combined Ark Service, Indexer, Admin, Signer Manager, and Wallet API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::Deserialize;
use serde::Serialize;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexerTxHistoryRecord {
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<i32>,
    #[serde(rename = "commitmentTxid", skip_serializing_if = "Option::is_none")]
    pub commitment_txid: Option<String>,
    #[serde(rename = "createdAt", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<i64>,
    #[serde(rename = "isSettled", skip_serializing_if = "Option::is_none")]
    pub is_settled: Option<bool>,
    #[serde(rename = "settledBy", skip_serializing_if = "Option::is_none")]
    pub settled_by: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<models::IndexerTxType>,
    #[serde(rename = "virtualTxid", skip_serializing_if = "Option::is_none")]
    pub virtual_txid: Option<String>,
}

impl IndexerTxHistoryRecord {
    pub fn new() -> IndexerTxHistoryRecord {
        IndexerTxHistoryRecord {
            amount: None,
            commitment_txid: None,
            created_at: None,
            is_settled: None,
            settled_by: None,
            r#type: None,
            virtual_txid: None,
        }
    }
}
