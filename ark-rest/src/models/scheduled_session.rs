/*
 * Ark API
 *
 * Combined Ark Service, Indexer, Admin, Signer Manager, and Wallet API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::Deserialize;
use serde::Serialize;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ScheduledSession {
    #[serde(rename = "duration", skip_serializing_if = "Option::is_none")]
    pub duration: Option<String>,
    #[serde(rename = "fees", skip_serializing_if = "Option::is_none")]
    pub fees: Option<models::FeeInfo>,
    #[serde(rename = "nextEndTime", skip_serializing_if = "Option::is_none")]
    pub next_end_time: Option<String>,
    #[serde(rename = "nextStartTime", skip_serializing_if = "Option::is_none")]
    pub next_start_time: Option<String>,
    #[serde(rename = "period", skip_serializing_if = "Option::is_none")]
    pub period: Option<String>,
}

impl ScheduledSession {
    pub fn new() -> ScheduledSession {
        ScheduledSession {
            duration: None,
            fees: None,
            next_end_time: None,
            next_start_time: None,
            period: None,
        }
    }
}
