/*
 * Ark API
 *
 * Combined Ark Service and Indexer API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::Deserialize;
use serde::Serialize;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetConvictionsInRangeRequest {
    /// Unix timestamp
    #[serde(rename = "from", skip_serializing_if = "Option::is_none")]
    pub from: Option<i64>,
    /// Unix timestamp
    #[serde(rename = "to", skip_serializing_if = "Option::is_none")]
    pub to: Option<i64>,
}

impl GetConvictionsInRangeRequest {
    pub fn new() -> GetConvictionsInRangeRequest {
        GetConvictionsInRangeRequest {
            from: None,
            to: None,
        }
    }
}
