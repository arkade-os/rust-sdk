/*
 * Ark API
 *
 * Combined Ark Service, Indexer, Admin, Signer Manager, and Wallet API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::Deserialize;
use serde::Serialize;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexerChain {
    #[serde(rename = "expiresAt", skip_serializing_if = "Option::is_none")]
    pub expires_at: Option<i64>,
    /// txids of the transactions in the chain used as input of the current tx
    #[serde(rename = "spends", skip_serializing_if = "Option::is_none")]
    pub spends: Option<Vec<String>>,
    #[serde(rename = "txid", skip_serializing_if = "Option::is_none")]
    pub txid: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<models::IndexerChainedTxType>,
}

impl IndexerChain {
    pub fn new() -> IndexerChain {
        IndexerChain {
            expires_at: None,
            spends: None,
            txid: None,
            r#type: None,
        }
    }
}
