/*
 * Ark API
 *
 * Combined Ark Service and Indexer API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::Deserialize;
use serde::Serialize;

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConvictionType {
    #[serde(rename = "CONVICTION_TYPE_UNSPECIFIED")]
    ConvictionTypeUnspecified,
    #[serde(rename = "CONVICTION_TYPE_SCRIPT")]
    ConvictionTypeScript,
}

impl std::fmt::Display for ConvictionType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::ConvictionTypeUnspecified => write!(f, "CONVICTION_TYPE_UNSPECIFIED"),
            Self::ConvictionTypeScript => write!(f, "CONVICTION_TYPE_SCRIPT"),
        }
    }
}

impl Default for ConvictionType {
    fn default() -> ConvictionType {
        Self::ConvictionTypeUnspecified
    }
}
