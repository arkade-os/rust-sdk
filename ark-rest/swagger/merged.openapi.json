{
  "openapi": "3.1.0",
  "info": {
    "title": "Ark API",
    "version": "1.0.0",
    "description": "Combined Ark Service, Indexer, Admin, Signer Manager, and Wallet API"
  },
  "components": {
    "schemas": {
      "BatchFailedEvent": {
        "title": "BatchFailedEvent",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "BatchFinalizationEvent": {
        "title": "BatchFinalizationEvent",
        "type": "object",
        "properties": {
          "commitmentTx": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "BatchFinalizedEvent": {
        "title": "BatchFinalizedEvent",
        "type": "object",
        "properties": {
          "commitmentTxid": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "BatchStartedEvent": {
        "title": "BatchStartedEvent",
        "type": "object",
        "properties": {
          "batchExpiry": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "string"
          },
          "intentIdHashes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DeprecatedSigner": {
        "title": "DeprecatedSigner",
        "type": "object",
        "properties": {
          "cutoffDate": {
            "type": "integer",
            "format": "int64"
          },
          "pubkey": {
            "type": "string"
          }
        }
      },
      "ErrorDetails": {
        "title": "ErrorDetails",
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          }
        }
      },
      "FeeInfo": {
        "title": "FeeInfo",
        "type": "object",
        "properties": {
          "intentFee": {
            "$ref": "#/components/schemas/IntentFeeInfo"
          },
          "txFeeRate": {
            "type": "string"
          }
        }
      },
      "Heartbeat": {
        "title": "Heartbeat",
        "type": "object"
      },
      "Input": {
        "title": "Input",
        "type": "object",
        "properties": {
          "outpoint": {
            "$ref": "#/components/schemas/Outpoint"
          },
          "taprootTree": {
            "$ref": "#/components/schemas/Tapscripts"
          }
        }
      },
      "Intent": {
        "title": "Intent",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "proof": {
            "type": "string"
          }
        }
      },
      "IntentFeeInfo": {
        "title": "IntentFeeInfo",
        "type": "object",
        "properties": {
          "offchainInput": {
            "type": "string"
          },
          "offchainOutput": {
            "type": "string"
          },
          "onchainInput": {
            "type": "string"
          },
          "onchainOutput": {
            "type": "string"
          }
        }
      },
      "Outpoint": {
        "title": "Outpoint",
        "type": "object",
        "properties": {
          "txid": {
            "type": "string"
          },
          "vout": {
            "type": "integer",
            "format": "uint32"
          }
        }
      },
      "PendingTx": {
        "title": "PendingTx",
        "type": "object",
        "properties": {
          "arkTxid": {
            "type": "string"
          },
          "finalArkTx": {
            "type": "string"
          },
          "signedCheckpointTxs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ScheduledSession": {
        "title": "ScheduledSession",
        "type": "object",
        "properties": {
          "duration": {
            "type": "integer",
            "format": "int64"
          },
          "fees": {
            "$ref": "#/components/schemas/FeeInfo"
          },
          "nextEndTime": {
            "type": "integer",
            "format": "int64"
          },
          "nextStartTime": {
            "type": "integer",
            "format": "int64"
          },
          "period": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Tapscripts": {
        "title": "Tapscripts",
        "type": "object",
        "properties": {
          "scripts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TreeNoncesAggregatedEvent": {
        "title": "TreeNoncesAggregatedEvent",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "treeNonces": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "TreeNoncesEvent": {
        "title": "TreeNoncesEvent",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "nonces": {
            "type": "object",
            "description": "pubkey -> musig2 public nonce",
            "additionalProperties": {
              "type": "string"
            }
          },
          "topic": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "TreeSignatureEvent": {
        "title": "TreeSignatureEvent",
        "type": "object",
        "properties": {
          "batchIndex": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "topic": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "TreeSigningStartedEvent": {
        "title": "TreeSigningStartedEvent",
        "type": "object",
        "properties": {
          "cosignersPubkeys": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "unsignedCommitmentTx": {
            "type": "string"
          }
        }
      },
      "TreeTxEvent": {
        "title": "TreeTxEvent",
        "type": "object",
        "properties": {
          "batchIndex": {
            "type": "integer",
            "format": "int32"
          },
          "children": {
            "type": "object",
            "description": "output index -> child txid",
            "additionalProperties": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "topic": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tx": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "TxData": {
        "title": "TxData",
        "type": "object",
        "properties": {
          "tx": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "TxNotification": {
        "title": "TxNotification",
        "type": "object",
        "properties": {
          "checkpointTxs": {
            "type": "object",
            "description": "This field is set only in case of offchain tx.\n\nkey: outpoint, value: checkpoint txid",
            "additionalProperties": {
              "$ref": "#/components/schemas/TxData"
            }
          },
          "spendableVtxos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vtxo"
            }
          },
          "spentVtxos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vtxo"
            }
          },
          "tx": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "Vtxo": {
        "title": "Vtxo",
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "uint64"
          },
          "arkTxid": {
            "type": "string"
          },
          "commitmentTxids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "expiresAt": {
            "type": "integer",
            "format": "int64"
          },
          "isPreconfirmed": {
            "type": "boolean"
          },
          "isSpent": {
            "type": "boolean"
          },
          "isSwept": {
            "type": "boolean"
          },
          "isUnrolled": {
            "type": "boolean"
          },
          "outpoint": {
            "$ref": "#/components/schemas/Outpoint"
          },
          "script": {
            "type": "string"
          },
          "settledBy": {
            "type": "string"
          },
          "spentBy": {
            "type": "string"
          }
        }
      },
      "Any": {
        "type": "object",
        "description": "Any contains an arbitrary schema along with a URL to help identify the type of the schema.",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A URL/resource name that uniquely identifies the type of the schema."
          }
        }
      },
      "ConfirmRegistrationRequest": {
        "title": "ConfirmRegistrationRequest",
        "type": "object",
        "properties": {
          "intentId": {
            "type": "string"
          }
        }
      },
      "ConfirmRegistrationResponse": {
        "title": "ConfirmRegistrationResponse",
        "type": "object"
      },
      "DeleteIntentRequest": {
        "title": "DeleteIntentRequest",
        "type": "object",
        "properties": {
          "intent": {
            "$ref": "#/components/schemas/Intent",
            "description": "an intent proof that includes any of the inputs of the intent to be deleted to prove the\nownership of that intent."
          }
        }
      },
      "DeleteIntentResponse": {
        "title": "DeleteIntentResponse",
        "type": "object"
      },
      "FinalizeTxRequest": {
        "title": "FinalizeTxRequest",
        "type": "object",
        "properties": {
          "arkTxid": {
            "type": "string"
          },
          "finalCheckpointTxs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FinalizeTxResponse": {
        "title": "FinalizeTxResponse",
        "type": "object"
      },
      "GetEventStreamRequest": {
        "title": "GetEventStreamRequest",
        "type": "object",
        "properties": {
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetEventStreamResponse": {
        "title": "GetEventStreamResponse",
        "type": "object",
        "properties": {
          "batchFailed": {
            "$ref": "#/components/schemas/BatchFailedEvent"
          },
          "batchFinalization": {
            "$ref": "#/components/schemas/BatchFinalizationEvent"
          },
          "batchFinalized": {
            "$ref": "#/components/schemas/BatchFinalizedEvent"
          },
          "batchStarted": {
            "$ref": "#/components/schemas/BatchStartedEvent"
          },
          "heartbeat": {
            "$ref": "#/components/schemas/Heartbeat"
          },
          "treeNonces": {
            "$ref": "#/components/schemas/TreeNoncesEvent"
          },
          "treeNoncesAggregated": {
            "$ref": "#/components/schemas/TreeNoncesAggregatedEvent"
          },
          "treeSignature": {
            "$ref": "#/components/schemas/TreeSignatureEvent"
          },
          "treeSigningStarted": {
            "$ref": "#/components/schemas/TreeSigningStartedEvent"
          },
          "treeTx": {
            "$ref": "#/components/schemas/TreeTxEvent"
          }
        }
      },
      "GetInfoRequest": {
        "title": "GetInfoRequest",
        "type": "object"
      },
      "GetInfoResponse": {
        "title": "GetInfoResponse",
        "type": "object",
        "properties": {
          "boardingExitDelay": {
            "type": "integer",
            "format": "int64"
          },
          "checkpointTapscript": {
            "type": "string"
          },
          "deprecatedSigners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedSigner"
            }
          },
          "digest": {
            "type": "string"
          },
          "dust": {
            "type": "integer",
            "format": "int64"
          },
          "fees": {
            "$ref": "#/components/schemas/FeeInfo"
          },
          "forfeitAddress": {
            "type": "string"
          },
          "forfeitPubkey": {
            "type": "string"
          },
          "network": {
            "type": "string"
          },
          "scheduledSession": {
            "$ref": "#/components/schemas/ScheduledSession"
          },
          "serviceStatus": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "sessionDuration": {
            "type": "integer",
            "format": "int64"
          },
          "signerPubkey": {
            "type": "string"
          },
          "unilateralExitDelay": {
            "type": "integer",
            "format": "int64"
          },
          "utxoMaxAmount": {
            "type": "integer",
            "description": "-1 means no limit (default), 0 means boarding not allowed",
            "format": "int64"
          },
          "utxoMinAmount": {
            "type": "integer",
            "format": "int64"
          },
          "version": {
            "type": "string"
          },
          "vtxoMaxAmount": {
            "type": "integer",
            "description": "-1 means no limit (default)",
            "format": "int64"
          },
          "vtxoMinAmount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetPendingTxRequest": {
        "title": "GetPendingTxRequest",
        "type": "object",
        "properties": {
          "intent": {
            "$ref": "#/components/schemas/Intent"
          }
        }
      },
      "GetPendingTxResponse": {
        "title": "GetPendingTxResponse",
        "type": "object",
        "properties": {
          "pendingTxs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PendingTx"
            }
          }
        }
      },
      "GetTransactionsStreamRequest": {
        "title": "GetTransactionsStreamRequest",
        "type": "object"
      },
      "GetTransactionsStreamResponse": {
        "title": "GetTransactionsStreamResponse",
        "type": "object",
        "properties": {
          "arkTx": {
            "$ref": "#/components/schemas/TxNotification"
          },
          "commitmentTx": {
            "$ref": "#/components/schemas/TxNotification"
          },
          "heartbeat": {
            "$ref": "#/components/schemas/Heartbeat"
          }
        }
      },
      "RegisterIntentRequest": {
        "title": "RegisterIntentRequest",
        "type": "object",
        "properties": {
          "intent": {
            "$ref": "#/components/schemas/Intent",
            "description": "an intent proof that embeds the outpoints to be spent and new ones to be created, as well as the\nproof of funds."
          }
        }
      },
      "RegisterIntentResponse": {
        "title": "RegisterIntentResponse",
        "type": "object",
        "properties": {
          "intentId": {
            "type": "string"
          }
        }
      },
      "Status": {
        "title": "Status",
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Any"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SubmitSignedForfeitTxsRequest": {
        "title": "SubmitSignedForfeitTxsRequest",
        "type": "object",
        "properties": {
          "signedCommitmentTx": {
            "type": "string",
            "description": "The user has to sign also the commitment tx if he registered a boarding UTXO."
          },
          "signedForfeitTxs": {
            "type": "array",
            "description": "Forfeit txs signed by the user.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SubmitSignedForfeitTxsResponse": {
        "title": "SubmitSignedForfeitTxsResponse",
        "type": "object"
      },
      "SubmitTreeNoncesRequest": {
        "title": "SubmitTreeNoncesRequest",
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string"
          },
          "pubkey": {
            "type": "string"
          },
          "treeNonces": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "SubmitTreeNoncesResponse": {
        "title": "SubmitTreeNoncesResponse",
        "type": "object"
      },
      "SubmitTreeSignaturesRequest": {
        "title": "SubmitTreeSignaturesRequest",
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string"
          },
          "pubkey": {
            "type": "string"
          },
          "treeSignatures": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "SubmitTreeSignaturesResponse": {
        "title": "SubmitTreeSignaturesResponse",
        "type": "object"
      },
      "SubmitTxRequest": {
        "title": "SubmitTxRequest",
        "type": "object",
        "properties": {
          "checkpointTxs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "signedArkTx": {
            "type": "string"
          }
        }
      },
      "SubmitTxResponse": {
        "title": "SubmitTxResponse",
        "type": "object",
        "properties": {
          "arkTxid": {
            "type": "string"
          },
          "finalArkTx": {
            "type": "string"
          },
          "signedCheckpointTxs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetBatchSweepTransactionsRequest": {
        "title": "GetBatchSweepTransactionsRequest",
        "type": "object",
        "properties": {
          "batchOutpoint": {
            "$ref": "#/components/schemas/IndexerOutpoint"
          }
        }
      },
      "GetBatchSweepTransactionsResponse": {
        "title": "GetBatchSweepTransactionsResponse",
        "type": "object",
        "properties": {
          "sweptBy": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetCommitmentTxRequest": {
        "title": "GetCommitmentTxRequest",
        "type": "object",
        "properties": {
          "txid": {
            "type": "string"
          }
        }
      },
      "GetCommitmentTxResponse": {
        "title": "GetCommitmentTxResponse",
        "type": "object",
        "properties": {
          "batches": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IndexerBatch"
            }
          },
          "endedAt": {
            "type": "integer",
            "format": "int64"
          },
          "startedAt": {
            "type": "integer",
            "format": "int64"
          },
          "totalInputAmount": {
            "type": "integer",
            "format": "uint64"
          },
          "totalInputVtxos": {
            "type": "integer",
            "format": "int32"
          },
          "totalOutputAmount": {
            "type": "integer",
            "format": "uint64"
          },
          "totalOutputVtxos": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetConnectorsRequest": {
        "title": "GetConnectorsRequest",
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/IndexerPageRequest"
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "GetConnectorsResponse": {
        "title": "GetConnectorsResponse",
        "type": "object",
        "properties": {
          "connectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexerNode"
            }
          },
          "page": {
            "$ref": "#/components/schemas/IndexerPageResponse"
          }
        }
      },
      "GetForfeitTxsRequest": {
        "title": "GetForfeitTxsRequest",
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/IndexerPageRequest"
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "GetForfeitTxsResponse": {
        "title": "GetForfeitTxsResponse",
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/IndexerPageResponse"
          },
          "txids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetSubscriptionRequest": {
        "title": "GetSubscriptionRequest",
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string"
          }
        }
      },
      "GetSubscriptionResponse": {
        "title": "GetSubscriptionResponse",
        "type": "object",
        "properties": {
          "event": {
            "$ref": "#/components/schemas/IndexerSubscriptionEvent"
          },
          "heartbeat": {
            "$ref": "#/components/schemas/IndexerHeartbeat"
          }
        }
      },
      "GetVirtualTxsRequest": {
        "title": "GetVirtualTxsRequest",
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/IndexerPageRequest"
          },
          "txids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetVirtualTxsResponse": {
        "title": "GetVirtualTxsResponse",
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/IndexerPageResponse"
          },
          "txs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetVtxoChainRequest": {
        "title": "GetVtxoChainRequest",
        "type": "object",
        "properties": {
          "outpoint": {
            "$ref": "#/components/schemas/IndexerOutpoint"
          },
          "page": {
            "$ref": "#/components/schemas/IndexerPageRequest"
          }
        }
      },
      "GetVtxoChainResponse": {
        "title": "GetVtxoChainResponse",
        "type": "object",
        "properties": {
          "chain": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexerChain"
            }
          },
          "page": {
            "$ref": "#/components/schemas/IndexerPageResponse"
          }
        }
      },
      "GetVtxoTreeLeavesRequest": {
        "title": "GetVtxoTreeLeavesRequest",
        "type": "object",
        "properties": {
          "batchOutpoint": {
            "$ref": "#/components/schemas/IndexerOutpoint"
          },
          "page": {
            "$ref": "#/components/schemas/IndexerPageRequest"
          }
        }
      },
      "GetVtxoTreeLeavesResponse": {
        "title": "GetVtxoTreeLeavesResponse",
        "type": "object",
        "properties": {
          "leaves": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexerOutpoint"
            }
          },
          "page": {
            "$ref": "#/components/schemas/IndexerPageResponse"
          }
        }
      },
      "GetVtxoTreeRequest": {
        "title": "GetVtxoTreeRequest",
        "type": "object",
        "properties": {
          "batchOutpoint": {
            "$ref": "#/components/schemas/IndexerOutpoint"
          },
          "page": {
            "$ref": "#/components/schemas/IndexerPageRequest"
          }
        }
      },
      "GetVtxoTreeResponse": {
        "title": "GetVtxoTreeResponse",
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/IndexerPageResponse"
          },
          "vtxoTree": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexerNode"
            }
          }
        }
      },
      "GetVtxosRequest": {
        "title": "GetVtxosRequest",
        "type": "object",
        "properties": {
          "outpoints": {
            "type": "array",
            "description": "Or specify a list of vtxo outpoints. The 2 filters are mutually exclusive.",
            "items": {
              "type": "string"
            }
          },
          "page": {
            "$ref": "#/components/schemas/IndexerPageRequest"
          },
          "recoverableOnly": {
            "type": "boolean",
            "description": "Retrieve only recoverable vtxos (notes, subdust or swept vtxos).\nThe 3 filters are mutually exclusive,"
          },
          "scripts": {
            "type": "array",
            "description": "Either specify a list of vtxo scripts.",
            "items": {
              "type": "string"
            }
          },
          "spendableOnly": {
            "type": "boolean",
            "description": "Retrieve only spendable vtxos"
          },
          "spentOnly": {
            "type": "boolean",
            "description": "Retrieve only spent vtxos."
          }
        }
      },
      "GetVtxosResponse": {
        "title": "GetVtxosResponse",
        "type": "object",
        "properties": {
          "page": {
            "$ref": "#/components/schemas/IndexerPageResponse"
          },
          "vtxos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexerVtxo"
            }
          }
        }
      },
      "IndexerBatch": {
        "title": "IndexerBatch",
        "type": "object",
        "properties": {
          "expiresAt": {
            "type": "integer",
            "format": "int64"
          },
          "swept": {
            "type": "boolean"
          },
          "totalOutputAmount": {
            "type": "integer",
            "format": "uint64"
          },
          "totalOutputVtxos": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "IndexerChain": {
        "title": "IndexerChain",
        "type": "object",
        "properties": {
          "expiresAt": {
            "type": "integer",
            "format": "int64"
          },
          "spends": {
            "type": "array",
            "description": "txids of the transactions in the chain used as input of the current tx",
            "items": {
              "type": "string"
            }
          },
          "txid": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/IndexerChainedTxType"
          }
        }
      },
      "IndexerChainedTxType": {
        "title": "IndexerChainedTxType",
        "enum": [
          "INDEXER_CHAINED_TX_TYPE_UNSPECIFIED",
          "INDEXER_CHAINED_TX_TYPE_COMMITMENT",
          "INDEXER_CHAINED_TX_TYPE_ARK",
          "INDEXER_CHAINED_TX_TYPE_TREE",
          "INDEXER_CHAINED_TX_TYPE_CHECKPOINT"
        ],
        "type": "string",
        "default": "INDEXER_CHAINED_TX_TYPE_UNSPECIFIED"
      },
      "IndexerHeartbeat": {
        "title": "IndexerHeartbeat",
        "type": "object"
      },
      "IndexerNode": {
        "title": "IndexerNode",
        "type": "object",
        "properties": {
          "children": {
            "type": "object",
            "description": "vout -> txid",
            "additionalProperties": {
              "type": "string"
            }
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "IndexerOutpoint": {
        "title": "IndexerOutpoint",
        "type": "object",
        "properties": {
          "txid": {
            "type": "string"
          },
          "vout": {
            "type": "integer",
            "format": "uint32"
          }
        }
      },
      "IndexerPageRequest": {
        "title": "IndexerPageRequest",
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "IndexerPageResponse": {
        "title": "IndexerPageResponse",
        "type": "object",
        "properties": {
          "current": {
            "type": "integer",
            "format": "int32"
          },
          "next": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "IndexerSubscriptionEvent": {
        "title": "IndexerSubscriptionEvent",
        "type": "object",
        "properties": {
          "checkpointTxs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IndexerTxData"
            }
          },
          "newVtxos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexerVtxo"
            }
          },
          "scripts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "spentVtxos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexerVtxo"
            }
          },
          "sweptVtxos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexerVtxo"
            }
          },
          "tx": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "IndexerTxData": {
        "title": "IndexerTxData",
        "type": "object",
        "properties": {
          "tx": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "IndexerTxHistoryRecord": {
        "title": "IndexerTxHistoryRecord",
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "uint64"
          },
          "commitmentTxid": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "isSettled": {
            "type": "boolean"
          },
          "settledBy": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/IndexerTxType"
          },
          "virtualTxid": {
            "type": "string"
          }
        }
      },
      "IndexerTxType": {
        "title": "IndexerTxType",
        "enum": [
          "INDEXER_TX_TYPE_UNSPECIFIED",
          "INDEXER_TX_TYPE_RECEIVED",
          "INDEXER_TX_TYPE_SENT"
        ],
        "type": "string",
        "default": "INDEXER_TX_TYPE_UNSPECIFIED"
      },
      "IndexerVtxo": {
        "title": "IndexerVtxo",
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "uint64"
          },
          "arkTxid": {
            "type": "string"
          },
          "commitmentTxids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "expiresAt": {
            "type": "integer",
            "format": "int64"
          },
          "isPreconfirmed": {
            "type": "boolean"
          },
          "isSpent": {
            "type": "boolean"
          },
          "isSwept": {
            "type": "boolean"
          },
          "isUnrolled": {
            "type": "boolean"
          },
          "outpoint": {
            "$ref": "#/components/schemas/IndexerOutpoint"
          },
          "script": {
            "type": "string"
          },
          "settledBy": {
            "type": "string"
          },
          "spentBy": {
            "type": "string"
          }
        }
      },
      "SubscribeForScriptsRequest": {
        "title": "SubscribeForScriptsRequest",
        "type": "object",
        "properties": {
          "scripts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subscriptionId": {
            "type": "string",
            "description": "If set, update an existing subscription"
          }
        }
      },
      "SubscribeForScriptsResponse": {
        "title": "SubscribeForScriptsResponse",
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string"
          }
        }
      },
      "UnsubscribeForScriptsRequest": {
        "title": "UnsubscribeForScriptsRequest",
        "type": "object",
        "properties": {
          "scripts": {
            "type": "array",
            "description": "If empty, unsubscribe all scripts",
            "items": {
              "type": "string"
            }
          },
          "subscriptionId": {
            "type": "string"
          }
        }
      },
      "UnsubscribeForScriptsResponse": {
        "title": "UnsubscribeForScriptsResponse",
        "type": "object"
      },
      "LoadSignerRequest": {
        "title": "LoadSignerRequest",
        "type": "object",
        "properties": {
          "signerPrivateKey": {
            "type": "string"
          },
          "signerUrl": {
            "type": "string"
          }
        }
      },
      "LoadSignerResponse": {
        "title": "LoadSignerResponse",
        "type": "object"
      },
      "Balance": {
        "title": "Balance",
        "type": "object",
        "properties": {
          "available": {
            "type": "string"
          },
          "locked": {
            "type": "string"
          }
        }
      },
      "CreateRequest": {
        "title": "CreateRequest",
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "seed": {
            "type": "string"
          }
        }
      },
      "CreateResponse": {
        "title": "CreateResponse",
        "type": "object"
      },
      "DeriveAddressRequest": {
        "title": "DeriveAddressRequest",
        "type": "object"
      },
      "DeriveAddressResponse": {
        "title": "DeriveAddressResponse",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          }
        }
      },
      "GenSeedRequest": {
        "title": "GenSeedRequest",
        "type": "object"
      },
      "GenSeedResponse": {
        "title": "GenSeedResponse",
        "type": "object",
        "properties": {
          "seed": {
            "type": "string"
          }
        }
      },
      "GetBalanceRequest": {
        "title": "GetBalanceRequest",
        "type": "object"
      },
      "GetBalanceResponse": {
        "title": "GetBalanceResponse",
        "type": "object",
        "properties": {
          "connectorsAccount": {
            "$ref": "#/components/schemas/Balance"
          },
          "mainAccount": {
            "$ref": "#/components/schemas/Balance"
          }
        }
      },
      "GetStatusRequest": {
        "title": "GetStatusRequest",
        "type": "object"
      },
      "GetStatusResponse": {
        "title": "GetStatusResponse",
        "type": "object",
        "properties": {
          "initialized": {
            "type": "boolean"
          },
          "synced": {
            "type": "boolean"
          },
          "unlocked": {
            "type": "boolean"
          }
        }
      },
      "LockRequest": {
        "title": "LockRequest",
        "type": "object"
      },
      "LockResponse": {
        "title": "LockResponse",
        "type": "object"
      },
      "RestoreRequest": {
        "title": "RestoreRequest",
        "type": "object",
        "properties": {
          "gapLimit": {
            "type": "integer",
            "format": "uint64"
          },
          "password": {
            "type": "string"
          },
          "seed": {
            "type": "string"
          }
        }
      },
      "RestoreResponse": {
        "title": "RestoreResponse",
        "type": "object"
      },
      "UnlockRequest": {
        "title": "UnlockRequest",
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        }
      },
      "UnlockResponse": {
        "title": "UnlockResponse",
        "type": "object"
      },
      "WithdrawRequest": {
        "title": "WithdrawRequest",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "all": {
            "type": "boolean",
            "description": "if all=true, amount is ignored and all available balance is withdrawn including connectors account funds\nmust be used carefully to not make connectors utxos unspendable, making forfeit txs invalid"
          },
          "amount": {
            "type": "integer",
            "format": "uint64"
          }
        }
      },
      "WithdrawResponse": {
        "title": "WithdrawResponse",
        "type": "object",
        "properties": {
          "txid": {
            "type": "string"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "ArkService"
    },
    {
      "name": "IndexerService"
    },
    {
      "name": "SignerManagerService"
    },
    {
      "name": "WalletInitializerService"
    },
    {
      "name": "WalletService"
    }
  ],
  "paths": {
    "/v1/batch/ack": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "ConfirmRegistration allows a client that has been selected for the next batch to confirm its\nparticipation by revealing the intent id.",
        "operationId": "ArkService_ConfirmRegistration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmRegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmRegistrationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/batch/deleteIntent": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "DeleteIntent removes a previously registered intent from the server.\nThe client should provide the BIP-322 signature and message including any of the vtxos used in\nthe registered intent to prove its ownership.\nThe server should delete the intent and return success.",
        "operationId": "ArkService_DeleteIntent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteIntentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteIntentResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/batch/events": {
      "get": {
        "tags": [
          "ArkService"
        ],
        "description": "GetEventStream is a server-side streaming RPC that allows clients to receive a stream of\nevents related to batch processing.\nClients should use this stream as soon as they are ready to join a batch and can listen for\nvarious events such as batch start, batch finalization, and other related activities.\nThe server pushes these events to the client in real-time as soon as its ready to move to the\nnext phase of the batch processing.",
        "operationId": "ArkService_GetEventStream",
        "parameters": [
          {
            "name": "topics",
            "in": "query",
            "style": "simple",
            "schema": {
              "minItems": 1,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a successful response. (streaming responses)",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/GetEventStreamResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/batch/registerIntent": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "RegisterIntent allows to register a new intent that will be eventually selected by the server\nfor a particular batch.\nThe client should provide a BIP-322 message with the intent information, and the server should\nrespond with an intent id.",
        "operationId": "ArkService_RegisterIntent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterIntentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterIntentResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/batch/submitForfeitTxs": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "SubmitSignedForfeitTxs allows a client to submit signed forfeit transactions and/or signed\ncommitment transaction (in case of onboarding).\nThe server should verify the signed txs and return success.",
        "operationId": "ArkService_SubmitSignedForfeitTxs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitSignedForfeitTxsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitSignedForfeitTxsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/batch/tree/submitNonces": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "SubmitTreeNonces allows a cosigner to submit the tree nonces for the musig2 session of a given\nbatch.\nThe client should provide the batch id, the cosigner public key, and the tree nonces.\nThe server should verify the cosigner public key and the nonces, and store them for later\naggregation once nonces from all clients are collected.",
        "operationId": "ArkService_SubmitTreeNonces",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitTreeNoncesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitTreeNoncesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/batch/tree/submitSignatures": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "SubmitTreeSignatures allows a cosigner to submit the tree signatures for the musig2 session of\na given batch.\nThe client should provide the batch id, the cosigner public key, and the tree signatures.\nThe server should verify the cosigner public key and the signatures, and store them for later\naggregation once signatures from all clients are collected.",
        "operationId": "ArkService_SubmitTreeSignatures",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitTreeSignaturesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitTreeSignaturesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/info": {
      "get": {
        "tags": [
          "ArkService"
        ],
        "description": "GetInfo returns information and parameters of the server.",
        "operationId": "ArkService_GetInfo",
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInfoResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tx/finalize": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "FinalizeTx is the last lef of the process of spending vtxos offchain and allows a client to\nsubmit the fully signed checkpoint txs for the provided Ark txid .\nThe server verifies the signed checkpoint transactions and returns success if everything is\nvalid.",
        "operationId": "ArkService_FinalizeTx",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinalizeTxRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinalizeTxResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tx/pending": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "GetPendingTx returns not finalized transaction(s) for a given set of inputs.\nthe client should provide a BIP322 proof of ownership of the inputs",
        "operationId": "ArkService_GetPendingTx",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPendingTxRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPendingTxResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tx/submit": {
      "post": {
        "tags": [
          "ArkService"
        ],
        "description": "SubmitTx is the first leg of the process of spending vtxos offchain and allows a client to\nsubmit a signed Ark transaction and the unsigned checkpoint transactions.\nThe server should verify the signed transactions and return the fully signed Ark tx and the\nsigned checkpoint txs.",
        "operationId": "ArkService_SubmitTx",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitTxRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitTxResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/txs": {
      "get": {
        "tags": [
          "ArkService"
        ],
        "description": "GetTransactionsStream is a server-side streaming RPC that allows clients to receive\nnotifications in real-time about any commitment tx or ark tx processed and finalized by the\nserver.\nNOTE: the stream doesn't have history support, therefore returns only txs from the moment it's\nopened until it's closed.",
        "operationId": "ArkService_GetTransactionsStream",
        "responses": {
          "200": {
            "description": "a successful response. (streaming responses)",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionsStreamResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/indexer/batch/{batch_outpoint.txid}/{batch_outpoint.vout}/sweepTxs": {
      "get": {
        "tags": [
          "IndexerService"
        ],
        "description": "GetBatchSweepTransactions returns the list of transaction (txid) that swept a given batch\noutput.\nIn most cases the list contains only one txid, meaning that all the amount locked for a\nvtxo tree has been claimed back.\nIf any of the leaves of the tree have been unrolled onchain before the expiration, the\nlist will contain many txids instead.\nIn a binary tree with 4 or more leaves, 1 unroll causes the server to broadcast 3 txs to sweep\nthe whole rest of tree for example.\nIf a whole vtxo tree has been unrolled onchain, the list of txids for that batch output is\nempty.",
        "operationId": "IndexerService_GetBatchSweepTransactions",
        "parameters": [
          {
            "name": "batchOutpoint.txid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batchOutpoint.vout",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBatchSweepTransactionsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/indexer/batch/{batch_outpoint.txid}/{batch_outpoint.vout}/tree": {
      "get": {
        "tags": [
          "IndexerService"
        ],
        "description": "GetVtxoTree returns the vtxo tree for the provided batch outpoint.\nThe response includes a list of txs with details on the tree posistion and may\ninclude pagination information if the results span multiple pages.",
        "operationId": "IndexerService_GetVtxoTree",
        "parameters": [
          {
            "name": "batchOutpoint.txid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batchOutpoint.vout",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint32"
            }
          },
          {
            "name": "page.size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page.index",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVtxoTreeResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/indexer/batch/{batch_outpoint.txid}/{batch_outpoint.vout}/tree/leaves": {
      "get": {
        "tags": [
          "IndexerService"
        ],
        "description": "GetVtxoTreeLeaves returns the list of leaves (vtxo outpoints) of the tree(s) for the\nprovided batch outpoint.\nThe response may be paginated if the results span multiple pages.",
        "operationId": "IndexerService_GetVtxoTreeLeaves",
        "parameters": [
          {
            "name": "batchOutpoint.txid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "batchOutpoint.vout",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint32"
            }
          },
          {
            "name": "page.size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page.index",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVtxoTreeLeavesResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/indexer/commitmentTx/{txid}": {
      "get": {
        "tags": [
          "IndexerService"
        ],
        "description": "GetCommitmentTx returns information about a specific commitment transaction identified by the\nprovided txid.",
        "operationId": "IndexerService_GetCommitmentTx",
        "parameters": [
          {
            "name": "txid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommitmentTxResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/indexer/commitmentTx/{txid}/connectors": {
      "get": {
        "tags": [
          "IndexerService"
        ],
        "description": "GetConnectors returns the tree of connectors for the provided commitment transaction.\nThe response includes a list of connector txs with details on the tree posistion and may\ninclude pagination information if the results span multiple pages.",
        "operationId": "IndexerService_GetConnectors",
        "parameters": [
          {
            "name": "txid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page.size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page.index",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConnectorsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/indexer/commitmentTx/{txid}/forfeitTxs": {
      "get": {
        "tags": [
          "IndexerService"
        ],
        "description": "GetForfeitTxs returns the list of forfeit transactions that were submitted for the provided\ncommitment transaction.\nThe response may include pagination information if the results span multiple pages.",
        "operationId": "IndexerService_GetForfeitTxs",
        "parameters": [
          {
            "name": "txid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page.size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page.index",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetForfeitTxsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/indexer/script/subscribe": {
      "post": {
        "tags": [
          "IndexerService"
        ],
        "description": "SubscribeForScripts allows to subscribe for tx notifications related to the provided vtxo\nscripts. It can also be used to update an existing subscribtion by adding new scripts to it.",
        "operationId": "IndexerService_SubscribeForScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeForScriptsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscribeForScriptsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/indexer/script/subscription/{subscription_id}": {
      "get": {
        "tags": [
          "IndexerService"
        ],
        "description": "GetSubscription is a server-side streaming RPC which allows clients to receive real-time\nnotifications on transactions related to the subscribed vtxo scripts.\nThe subscription can be created or updated by using the SubscribeForScripts and\nUnsubscribeForScripts RPCs.",
        "operationId": "IndexerService_GetSubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a successful response. (streaming responses)",
            "content": {
              "text/event-stream": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/indexer/script/unsubscribe": {
      "post": {
        "tags": [
          "IndexerService"
        ],
        "description": "UnsubscribeForScripts allows to remove scripts from an existing subscription.",
        "operationId": "IndexerService_UnsubscribeForScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnsubscribeForScriptsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsubscribeForScriptsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/indexer/virtualTx/{txids}": {
      "get": {
        "tags": [
          "IndexerService"
        ],
        "description": "GetVirtualTxs returns the virtual transactions in hex format for the specified txids.\nThe response may be paginated if the results span multiple pages.",
        "operationId": "IndexerService_GetVirtualTxs",
        "parameters": [
          {
            "name": "txids",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "minItems": 1,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "page.size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page.index",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVirtualTxsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/indexer/vtxo/{outpoint.txid}/{outpoint.vout}/chain": {
      "get": {
        "tags": [
          "IndexerService"
        ],
        "description": "GetVtxoChain returns the the chain of ark txs that starts from spending any vtxo leaf and ends\nwith the creation of the provided vtxo outpoint.\nThe response may be paginated if the results span multiple pages.",
        "operationId": "IndexerService_GetVtxoChain",
        "parameters": [
          {
            "name": "outpoint.txid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outpoint.vout",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint32"
            }
          },
          {
            "name": "page.size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page.index",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVtxoChainResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/indexer/vtxos": {
      "get": {
        "tags": [
          "IndexerService"
        ],
        "description": "GetVtxos returns the list of vtxos based on the provided filter. Vtxos can be retrieved either\nby addresses or by outpoints, and optionally filtered by spendable or spent only.\nThe response may be paginated if the results span multiple pages.",
        "operationId": "IndexerService_GetVtxos",
        "parameters": [
          {
            "name": "scripts",
            "in": "query",
            "description": "Either specify a list of vtxo scripts.",
            "style": "simple",
            "schema": {
              "minItems": 1,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "outpoints",
            "in": "query",
            "description": "Or specify a list of vtxo outpoints. The 2 filters are mutually exclusive.",
            "style": "simple",
            "schema": {
              "minItems": 1,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "spendableOnly",
            "in": "query",
            "description": "Retrieve only spendable vtxos",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "spentOnly",
            "in": "query",
            "description": "Retrieve only spent vtxos.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "recoverableOnly",
            "in": "query",
            "description": "Retrieve only recoverable vtxos (notes, subdust or swept vtxos).\nThe 3 filters are mutually exclusive,",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page.size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page.index",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVtxosResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/signer": {
      "post": {
        "tags": [
          "SignerManagerService"
        ],
        "operationId": "SignerManagerService_LoadSigner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadSignerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadSignerResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/wallet/address": {
      "get": {
        "tags": [
          "WalletService"
        ],
        "operationId": "WalletService_DeriveAddress",
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeriveAddressResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/wallet/balance": {
      "get": {
        "tags": [
          "WalletService"
        ],
        "operationId": "WalletService_GetBalance",
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBalanceResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/wallet/create": {
      "post": {
        "tags": [
          "WalletInitializerService"
        ],
        "operationId": "WalletInitializerService_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/wallet/lock": {
      "post": {
        "tags": [
          "WalletService"
        ],
        "operationId": "WalletService_Lock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LockRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LockResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/wallet/restore": {
      "post": {
        "tags": [
          "WalletInitializerService"
        ],
        "operationId": "WalletInitializerService_Restore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestoreResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/wallet/seed": {
      "get": {
        "tags": [
          "WalletInitializerService"
        ],
        "operationId": "WalletInitializerService_GenSeed",
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenSeedResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/wallet/status": {
      "get": {
        "tags": [
          "WalletInitializerService"
        ],
        "operationId": "WalletInitializerService_GetStatus",
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatusResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/wallet/unlock": {
      "post": {
        "tags": [
          "WalletInitializerService"
        ],
        "operationId": "WalletInitializerService_Unlock",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnlockRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnlockResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    },
    "/v1/admin/wallet/withdraw": {
      "post": {
        "tags": [
          "WalletService"
        ],
        "operationId": "WalletService_Withdraw",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WithdrawRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "a successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WithdrawResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Status"
                }
              }
            }
          }
        }
      }
    }
  }
}
